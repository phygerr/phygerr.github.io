<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - Phyger's Blog</title><link>/posts/</link><description>所有文章 | Phyger's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>463551098@qq.com (Phyger)</managingEditor><webMaster>463551098@qq.com (Phyger)</webMaster><lastBuildDate>Fri, 23 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="/posts/" rel="self" type="application/rss+xml"/><item><title>httpx | 优秀的HTTP客户端</title><link>/httpx-%E4%BC%98%E7%A7%80%E7%9A%84http%E5%AE%A2%E6%88%B7%E7%AB%AF/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/httpx-%E4%BC%98%E7%A7%80%E7%9A%84http%E5%AE%A2%E6%88%B7%E7%AB%AF/</guid><description>前言 相信你和我一样，在日常的工作中，requests 库被广泛使用。今天我要为你介绍一款号称下一代全功能的 HTTP 客户端：httpx。 什么是 httpx httpx 是 Python3</description></item><item><title>Python的@property是干嘛的？</title><link>/python%E7%9A%84property%E6%98%AF%E5%B9%B2%E5%98%9B%E7%9A%84-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/python%E7%9A%84property%E6%98%AF%E5%B9%B2%E5%98%9B%E7%9A%84-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</guid><description>通常，当我们需要对对象的敏感属性或者不希望外部直接访问的属性进行私有化，但是某些时候我们又需要对这些私有属性进行修改，该怎么处理呢？ 1、几个</description></item><item><title>Python的闭包是什么？</title><link>/%E9%97%AD%E5%8C%85%E6%98%AF%E4%BB%80%E4%B9%88-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/%E9%97%AD%E5%8C%85%E6%98%AF%E4%BB%80%E4%B9%88-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</guid><description>什么是闭包 Python中的闭包是一个比较模糊的概念，有很多朋友都认为不好理解，但是随着深入学习，就会发现闭包无论如何都是需要去理解的，下面我</description></item><item><title>Python的魔法方法一览表</title><link>/%E5%B9%B2%E8%B4%A7python%E7%9A%84%E9%AD%94%E6%95%B0%E6%96%B9%E6%B3%95%E4%B8%80%E8%A7%88%E8%A1%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/%E5%B9%B2%E8%B4%A7python%E7%9A%84%E9%AD%94%E6%95%B0%E6%96%B9%E6%B3%95%E4%B8%80%E8%A7%88%E8%A1%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</guid><description>基本的魔法方法 名称 解释 _new_(cls[, &amp;hellip;]) 在一个对象实例化的时候所调用的第一个方法 _init_(self[, &amp;hellip;]) 构造器，当一个实例被创建的时候调用的初始化方法 _del_(self) 析构器，当一个实例被销</description></item><item><title>Python装饰器进阶（类装饰器+带参数的装饰器+多装饰器）</title><link>/%E9%80%8F%E5%BD%BBpython%E8%A3%85%E9%A5%B0%E5%99%A8%E8%BF%9B%E9%98%B6%E7%B1%BB%E8%A3%85%E9%A5%B0%E5%99%A8-%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8-%E5%A4%9A%E8%A3%85%E9%A5%B0%E5%99%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/%E9%80%8F%E5%BD%BBpython%E8%A3%85%E9%A5%B0%E5%99%A8%E8%BF%9B%E9%98%B6%E7%B1%BB%E8%A3%85%E9%A5%B0%E5%99%A8-%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8-%E5%A4%9A%E8%A3%85%E9%A5%B0%E5%99%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</guid><description>接【简明】彻底搞清楚Python的装饰器，我们继续介绍类装饰器+带参数的装饰+多装饰器，顾名思义类装饰器就是类闭包。 定义一个类装饰器 需求：实</description></item><item><title>Token的生成和校验</title><link>/%E5%A2%99%E8%A3%82%E6%8E%A8%E8%8D%90token%E7%9A%84%E7%94%9F%E6%88%90%E5%92%8C%E6%A0%A1%E9%AA%8C/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/%E5%A2%99%E8%A3%82%E6%8E%A8%E8%8D%90token%E7%9A%84%E7%94%9F%E6%88%90%E5%92%8C%E6%A0%A1%E9%AA%8C/</guid><description>什么是 token token（也称令牌）就是一串字符，其作用是为了减轻频繁进行用户名和密码的验证而对服务器产生的压力。客户端首次访问通过正确的用户名和</description></item><item><title>Token的获取和使用-FastApi版</title><link>/%E5%85%A8%E6%98%AF%E7%B2%BE%E5%8D%8Etoken%E7%9A%84%E8%8E%B7%E5%8F%96%E5%92%8C%E4%BD%BF%E7%94%A8-fastapi%E7%89%88/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/%E5%85%A8%E6%98%AF%E7%B2%BE%E5%8D%8Etoken%E7%9A%84%E8%8E%B7%E5%8F%96%E5%92%8C%E4%BD%BF%E7%94%A8-fastapi%E7%89%88/</guid><description>前言 通常，我们的接口都是需要认证后才能可以访问的，前面我们介绍了 token 的生成和校验，那在 FastApi 中怎么设计需要认证的接口呢？ 定义令牌对象 1 oauth2_scheme = OAuth2PasswordBearer(tokenUrl=&amp;#34;/token/&amp;#34;) 以上/</description></item><item><title>彻底搞清楚Python的装饰器</title><link>/%E7%AE%80%E6%98%8E%E5%BD%BB%E5%BA%95%E6%90%9E%E6%B8%85%E6%A5%9Apython%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/%E7%AE%80%E6%98%8E%E5%BD%BB%E5%BA%95%E6%90%9E%E6%B8%85%E6%A5%9Apython%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</guid><description>什么是装饰器 接“闭包”是什么？，我们可以认为装饰器就是一个闭包函数，同时它也返回了一个函数。 你也可以认为装饰器就是将函数作为参数传递到方法中</description></item><item><title>掘金Markdown编辑器中的图片怎么居中？</title><link>/%E6%8E%98%E9%87%91markdown%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E6%80%8E%E4%B9%88%E5%B1%85%E4%B8%AD/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/%E6%8E%98%E9%87%91markdown%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E6%80%8E%E4%B9%88%E5%B1%85%E4%B8%AD/</guid><description>背景 刚才在某群里无意间看到有位掘友提问：这个插入的图片怎么居中显示？其实我也早有这个疑问，只是懒得去处理。但是看到掘友有疑问，那作为热心肠的</description></item><item><title>Vue的单向数据流和双向数据绑定</title><link>/vue%E7%9A%84%E5%8D%95%E5%90%91%E6%95%B0%E6%8D%AE%E6%B5%81%E5%92%8C%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A/</link><pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue%E7%9A%84%E5%8D%95%E5%90%91%E6%95%B0%E6%8D%AE%E6%B5%81%E5%92%8C%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A/</guid><description>前言 相信很多同学在学习 Vue 的时候，会经常用到或者被问题到单向数据流和双向数据绑定的概念，那它两到底有什么区别呢？我们一起来看看。 单向数据流 单向</description></item></channel></rss>