<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Vue简明教程 - 分类 - Phyger's Blog</title><link>/categories/vue%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</link><description>Vue简明教程 - 分类 - Phyger's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>463551098@qq.com (Phyger)</managingEditor><webMaster>463551098@qq.com (Phyger)</webMaster><lastBuildDate>Tue, 15 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/vue%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/" rel="self" type="application/rss+xml"/><item><title>Vue-1-初识</title><link>/vue-1-%E5%88%9D%E8%AF%86/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-1-%E5%88%9D%E8%AF%86/</guid><description>什么是 Vue 众所周知，Vue 是前端领域知名的渐进式框架。有了它，我们不用直接操作 DOM，Vue 为我们提供了很多优雅的操作 DOM 的接口。使用 Vue 进行前端</description></item><item><title>Vue-10-Class的动态绑定</title><link>/vue-10-class%E7%9A%84%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-10-class%E7%9A%84%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A/</guid><description>背景 当我们需要操作元素的 class 列表时，我们可以使用 v-bind 实现，但是直接计算整体字符显得很笨，针对这个问题，Vue 做了专门的加强，我们可以通过 v-bind:class 对 class 实</description></item><item><title>Vue-11-条件渲染</title><link>/vue-11-%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-11-%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93/</guid><description>条件渲染 当我们需要根据不同的条件对前端页面进行不同的渲染时，我们就需要用到条件渲染。Vue 为我们提供了 v-if、v-else-if、v-el</description></item><item><title>Vue-12-条件渲染（可重复元素）</title><link>/vue-12-%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E5%8F%AF%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-12-%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E5%8F%AF%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/</guid><description>背景 通常在我们的登录页面会有多种登录类型，我们可以通过条件渲染来切换不同的登录表单。 实践 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description></item><item><title>Vue-13-Vif和Vshow的区别</title><link>/vue-13-vif%E5%92%8Cvshow%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-13-vif%E5%92%8Cvshow%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>背景 你可能已经知道 Vue 中有两个条件渲染方法，即 v-if 和 v-show，那么对于他两有什么却别和使用场景呢？今天我们就一起来看下。 实践 v-if 特点 真条件渲染</description></item><item><title>Vue-14-列表渲染v-for</title><link>/vue-14-%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93v-for/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-14-%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93v-for/</guid><description>前言 在前面的章节中，我们已经了解了关于 Vue 的条件渲染，今天我们就一起来看看 Vue 的列表渲染，即 For 循环。 例子 v-for 和 Python 中的 for 循环一样，Vue 的列表渲染也</description></item><item><title>Vue-15-事件绑定</title><link>/vue-15-%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-15-%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A/</guid><description>前言 前面我们已经了解了条件渲染和列表渲染，计算属性动态绑定等。今天我们学习一个常用的概念：事件绑定，即在事件被触发时执行某些动作。 事件监听 代</description></item><item><title>Vue-16-表单绑定</title><link>/vue-16-%E8%A1%A8%E5%8D%95%E7%BB%91%E5%AE%9A/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-16-%E8%A1%A8%E5%8D%95%E7%BB%91%E5%AE%9A/</guid><description>方便演示，代码中只贴了 body 内容。 前言 我们知道 v-model 是双向数据绑定的代表。今天我们就一起来深入了解 v-model 表单绑定的更多内容。 使用场景 我们可以使使用 v-model 监听</description></item><item><title>Vue-17-组件</title><link>/vue-17-%E7%BB%84%E4%BB%B6/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-17-%E7%BB%84%E4%BB%B6/</guid><description>什么是组件？ 官方文档说，组件是带有名称的可复用实例。实际上你可以理解组件就是一个名为 zj 的 html 模板，当你要使用这个 html 模板的时候，你可以直接用 zj 标</description></item><item><title>Vue-2-常用指令</title><link>/vue-2-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/vue-2-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</guid><description>指令 Vue 中，有很多常用的指令，你可以理解它是可以绑定在指定的 action 上的。 实例 v-bind v-bind 就是 Vue 中一个常见的指令，其中 v- 前缀代表这是 Vue 为我们提供的指令，下面</description></item></channel></rss>