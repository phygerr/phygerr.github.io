<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>装饰器 - 标签 - Phyger's Blog</title><link>/tags/%E8%A3%85%E9%A5%B0%E5%99%A8/</link><description>装饰器 - 标签 - Phyger's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>463551098@qq.com (Phyger)</managingEditor><webMaster>463551098@qq.com (Phyger)</webMaster><lastBuildDate>Thu, 15 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E8%A3%85%E9%A5%B0%E5%99%A8/" rel="self" type="application/rss+xml"/><item><title>Python的@property是干嘛的？</title><link>/python%E7%9A%84property%E6%98%AF%E5%B9%B2%E5%98%9B%E7%9A%84-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/python%E7%9A%84property%E6%98%AF%E5%B9%B2%E5%98%9B%E7%9A%84-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</guid><description>通常，当我们需要对对象的敏感属性或者不希望外部直接访问的属性进行私有化，但是某些时候我们又需要对这些私有属性进行修改，该怎么处理呢？ 1、几个</description></item><item><title>Python装饰器进阶（类装饰器+带参数的装饰器+多装饰器）</title><link>/%E9%80%8F%E5%BD%BBpython%E8%A3%85%E9%A5%B0%E5%99%A8%E8%BF%9B%E9%98%B6%E7%B1%BB%E8%A3%85%E9%A5%B0%E5%99%A8-%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8-%E5%A4%9A%E8%A3%85%E9%A5%B0%E5%99%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/%E9%80%8F%E5%BD%BBpython%E8%A3%85%E9%A5%B0%E5%99%A8%E8%BF%9B%E9%98%B6%E7%B1%BB%E8%A3%85%E9%A5%B0%E5%99%A8-%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8-%E5%A4%9A%E8%A3%85%E9%A5%B0%E5%99%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</guid><description>接【简明】彻底搞清楚Python的装饰器，我们继续介绍类装饰器+带参数的装饰+多装饰器，顾名思义类装饰器就是类闭包。 定义一个类装饰器 需求：实</description></item><item><title>彻底搞清楚Python的装饰器</title><link>/%E7%AE%80%E6%98%8E%E5%BD%BB%E5%BA%95%E6%90%9E%E6%B8%85%E6%A5%9Apython%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/%E7%AE%80%E6%98%8E%E5%BD%BB%E5%BA%95%E6%90%9E%E6%B8%85%E6%A5%9Apython%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8-python-%E4%B8%BB%E9%A2%98%E6%9C%88/</guid><description>什么是装饰器 接“闭包”是什么？，我们可以认为装饰器就是一个闭包函数，同时它也返回了一个函数。 你也可以认为装饰器就是将函数作为参数传递到方法中</description></item></channel></rss>